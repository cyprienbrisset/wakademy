const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');
const https = require('https');
const http = require('http');

// Configuration avec cl√© de service
const SUPABASE_URL = 'http://supabasekong-ggcg8sgo4kwow8sk80004gkg.37.187.144.121.sslip.io';
const SUPABASE_SERVICE_KEY = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJzdXBhYmFzZSIsImlhdCI6MTc0NzQxMDcyMCwiZXhwIjo0OTAzMDg0MzIwLCJyb2xlIjoic2VydmljZV9yb2xlIn0.pg0RRnBzt13kxHejjt81ARzZaJlZIuB3DcejPIbFlus';

// Fichiers de d√©mo avec URLs libres de droits
const demoFiles = [
  {
    name: 'meditation-nature.mp3',
    url: 'https://www.soundjay.com/misc/sounds/bell-ringing-05.wav', // Fallback: on cr√©era un fichier audio
    type: 'audio/mpeg',
    metadata: {
      title: 'M√©ditation Sons de la Nature',
      description: 'Session de m√©ditation guid√©e avec sons naturels pour la relaxation profonde',
      type: 'podcast',
      author: 'Centre de M√©ditation Zen',
      language: 'fr',
      category: 'Bien-√™tre',
      duration: 1200, // 20 minutes
      tags: ['m√©ditation', 'nature', 'relaxation', 'zen']
    }
  },
  {
    name: 'leadership-conference.mp4',
    url: 'https://sample-videos.com/zip/10/mp4/SampleVideo_1280x720_1mb.mp4',
    type: 'video/mp4',
    metadata: {
      title: 'Conf√©rence Leadership Moderne',
      description: 'Pr√©sentation compl√®te sur les nouvelles approches du leadership en entreprise',
      type: 'video',
      author: 'Dr. Marie Lecomte',
      language: 'fr',
      category: 'Leadership',
      duration: 3600, // 1 heure
      tags: ['leadership', 'management', 'entreprise', 'conf√©rence']
    }
  },
  {
    name: 'guide-productivite.pdf',
    url: 'https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf',
    type: 'application/pdf',
    metadata: {
      title: 'Guide Complet de Productivit√©',
      description: 'Manuel pratique avec 50 techniques √©prouv√©es pour optimiser votre productivit√©',
      type: 'document',
      author: 'Institut de Productivit√©',
      language: 'fr',
      category: 'Productivit√©',
      duration: 0,
      tags: ['productivit√©', 'organisation', 'm√©thodes', 'efficacit√©']
    }
  },
  {
    name: 'podcast-innovation.mp3',
    url: 'https://www.soundjay.com/misc/sounds/bell-ringing-05.wav', // Fallback: on cr√©era un fichier audio
    type: 'audio/mpeg',
    metadata: {
      title: 'Podcast Innovation Tech',
      description: 'Discussion sur les derni√®res innovations technologiques et leur impact',
      type: 'podcast',
      author: 'TechTalk Radio',
      language: 'fr',
      category: 'Innovation',
      duration: 2700, // 45 minutes
      tags: ['innovation', 'technologie', 'startup', 'digital']
    }
  },
  {
    name: 'formation-vente.mp4',
    url: 'https://sample-videos.com/zip/10/mp4/SampleVideo_640x360_1mb.mp4',
    type: 'video/mp4',
    metadata: {
      title: 'Formation Techniques de Vente',
      description: 'Masterclass sur les strat√©gies de vente modernes et la n√©gociation',
      type: 'video',
      author: '√âcole de Commerce Digital',
      language: 'fr',
      category: 'Ventes',
      duration: 4200, // 70 minutes
      tags: ['vente', 'n√©gociation', 'commercial', 'formation']
    }
  },
  {
    name: 'webinar-communication.mp4',
    url: 'https://sample-videos.com/zip/10/mp4/SampleVideo_360x240_1mb.mp4',
    type: 'video/mp4',
    metadata: {
      title: 'Webinar Communication Efficace',
      description: 'S√©minaire en ligne sur les techniques de communication interpersonnelle',
      type: 'video',
      author: 'Centre de Formation Pro',
      language: 'fr',
      category: 'Communication',
      duration: 3000, // 50 minutes
      tags: ['communication', 'relations', 'interpersonnel', 'webinar']
    }
  }
];

// Fonction pour t√©l√©charger un fichier
function downloadFile(url, destination) {
  return new Promise((resolve, reject) => {
    const protocol = url.startsWith('https:') ? https : http;
    
    const file = fs.createWriteStream(destination);
    
    protocol.get(url, (response) => {
      if (response.statusCode === 200) {
        response.pipe(file);
        file.on('finish', () => {
          file.close();
          resolve();
        });
      } else if (response.statusCode === 302 || response.statusCode === 301) {
        // Redirection
        file.close();
        fs.unlinkSync(destination);
        downloadFile(response.headers.location, destination).then(resolve).catch(reject);
      } else {
        file.close();
        fs.unlinkSync(destination);
        reject(new Error(`Erreur HTTP: ${response.statusCode}`));
      }
    }).on('error', (err) => {
      file.close();
      fs.unlinkSync(destination);
      reject(err);
    });
  });
}

// Fonction pour cr√©er un fichier de d√©mo si le t√©l√©chargement √©choue
function createDemoFile(filePath, type, metadata) {
  let content = '';
  
  if (type.startsWith('audio/')) {
    content = generateAudioContent(metadata);
  } else if (type.startsWith('video/')) {
    content = generateVideoContent(metadata);
  } else if (type === 'application/pdf') {
    content = generatePDFContent(metadata);
  } else {
    content = generateGenericContent(metadata);
  }
  
  fs.writeFileSync(filePath, content);
}

function generateAudioContent(metadata) {
  return `# Contenu Audio: ${metadata.title}

Ce fichier audio contient: ${metadata.description}

Auteur: ${metadata.author}
Dur√©e: ${Math.floor(metadata.duration / 60)} minutes
Cat√©gorie: ${metadata.category}
Tags: ${metadata.tags.join(', ')}

--- Transcript simul√© ---

Bonjour et bienvenue dans cette session audio sur ${metadata.title.toLowerCase()}.

Je suis ${metadata.author}, et aujourd'hui nous allons explorer ensemble les concepts cl√©s de ${metadata.category.toLowerCase()}.

[Contenu audio simul√© - ${new Date().toISOString()}]

Au programme de cette session:
${metadata.tags.map((tag, i) => `${i + 1}. ${tag.charAt(0).toUpperCase() + tag.slice(1)}`).join('\n')}

Cette session vous permettra de d√©velopper vos comp√©tences et d'approfondir vos connaissances.

Merci de votre attention et bonne √©coute !

--- Fin du transcript ---
`;
}

function generateVideoContent(metadata) {
  return `# Contenu Vid√©o: ${metadata.title}

Description: ${metadata.description}

Informations techniques:
- Format: MP4
- Dur√©e: ${Math.floor(metadata.duration / 60)} minutes
- Auteur: ${metadata.author}
- Cat√©gorie: ${metadata.category}

--- Script vid√©o simul√© ---

[INTRO - 0:00]
Titre: ${metadata.title}
Pr√©sentateur: ${metadata.author}

[D√âVELOPPEMENT - 5:00]
Points cl√©s abord√©s:
${metadata.tags.map((tag, i) => `- ${tag.charAt(0).toUpperCase() + tag.slice(1)}`).join('\n')}

[EXEMPLES PRATIQUES - ${Math.floor(metadata.duration / 3)}:00]
Cas d'usage concrets et applications pratiques

[CONCLUSION - ${Math.floor(metadata.duration * 0.8 / 60)}:00]
R√©sum√© des points essentiels et prochaines √©tapes

[FIN - ${Math.floor(metadata.duration / 60)}:00]

--- M√©tadonn√©es ---
Cr√©√© le: ${new Date().toISOString()}
Fichier g√©n√©r√© automatiquement pour les tests Wakademy
`;
}

function generatePDFContent(metadata) {
  return `# ${metadata.title}

${metadata.description}

## Table des mati√®res

1. Introduction
2. Concepts fondamentaux
3. M√©thodes et techniques
4. Cas pratiques
5. Outils et ressources
6. Conclusion

---

## 1. Introduction

Bienvenue dans ce guide complet sur ${metadata.category.toLowerCase()}. 

Auteur: ${metadata.author}
Cat√©gorie: ${metadata.category}
Mots-cl√©s: ${metadata.tags.join(', ')}

Ce document a √©t√© con√ßu pour vous accompagner dans votre d√©veloppement professionnel.

## 2. Concepts fondamentaux

${metadata.tags.map(tag => `### ${tag.charAt(0).toUpperCase() + tag.slice(1)}

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris.

`).join('')}

## 3. M√©thodes et techniques

Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident.

### Approche pratique

1. Analyse de la situation
2. D√©finition des objectifs
3. Mise en ≈ìuvre des solutions
4. √âvaluation des r√©sultats

## 4. Cas pratiques

Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam.

### Exemple 1: Application en entreprise
### Exemple 2: Cas d'usage sp√©cifique
### Exemple 3: Retour d'exp√©rience

## 5. Outils et ressources

- Outil 1: Description et utilisation
- Outil 2: Avantages et inconv√©nients
- Outil 3: Mise en pratique

## 6. Conclusion

At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti.

---

Document g√©n√©r√© le: ${new Date().toISOString()}
¬© ${metadata.author} - Wakademy Platform
`;
}

function generateGenericContent(metadata) {
  return `# ${metadata.title}

${metadata.description}

Auteur: ${metadata.author}
Cat√©gorie: ${metadata.category}
Type: ${metadata.type}
Tags: ${metadata.tags.join(', ')}

Contenu g√©n√©r√© automatiquement pour les tests Wakademy.
Timestamp: ${new Date().toISOString()}
`;
}

async function addRealDemoData() {
  console.log('üé¨ Ajout de donn√©es de d√©mo r√©alistes avec vrais fichiers...');
  
  try {
    const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY);

    // Cr√©er le dossier temporaire
    const tempDir = path.join(__dirname, 'temp-demo-files');
    if (!fs.existsSync(tempDir)) {
      fs.mkdirSync(tempDir, { recursive: true });
    }

    console.log(`üìÅ Traitement de ${demoFiles.length} fichiers de d√©mo...`);

    for (const demoFile of demoFiles) {
      console.log(`\nüîÑ Traitement de ${demoFile.name}...`);
      
      const filePath = path.join(tempDir, demoFile.name);
      
      // Essayer de t√©l√©charger le fichier r√©el
      try {
        console.log(`üì• T√©l√©chargement depuis ${demoFile.url}...`);
        await downloadFile(demoFile.url, filePath);
        console.log(`‚úÖ T√©l√©chargement r√©ussi`);
      } catch (downloadError) {
        console.log(`‚ö†Ô∏è √âchec du t√©l√©chargement, cr√©ation d'un fichier de d√©mo...`);
        createDemoFile(filePath, demoFile.type, demoFile.metadata);
        console.log(`‚úÖ Fichier de d√©mo cr√©√©`);
      }

      // V√©rifier que le fichier existe
      if (!fs.existsSync(filePath)) {
        console.error(`‚ùå Fichier non trouv√©: ${filePath}`);
        continue;
      }

      const fileStats = fs.statSync(filePath);
      console.log(`üìä Taille du fichier: ${(fileStats.size / 1024).toFixed(2)} KB`);

      // G√©n√©rer le chemin de stockage
      const timestamp = Date.now();
      const storageFileName = `demo-${timestamp}-${demoFile.name}`;
      const storagePath = `demos/${new Date().toISOString().split('T')[0]}/${storageFileName}`;
      
      // Lire le fichier et cr√©er un Blob
      const fileBuffer = fs.readFileSync(filePath);
      const fileBlob = new Blob([fileBuffer], { type: demoFile.type });
      
      // Upload vers Supabase Storage
      console.log(`üì§ Upload vers le stockage Supabase...`);
      const { data: uploadData, error: uploadError } = await supabase.storage
        .from('content')
        .upload(storagePath, fileBlob, {
          cacheControl: '3600',
          upsert: false,
        });

      if (uploadError) {
        console.error(`‚ùå Erreur upload ${demoFile.name}:`, uploadError);
        continue;
      }

      console.log(`‚úÖ Upload r√©ussi: ${storagePath}`);

      // G√©n√©rer les URLs
      const { data: publicUrlData } = supabase.storage
        .from('content')
        .getPublicUrl(storagePath);

      const { data: signedUrlData } = await supabase.storage
        .from('content')
        .createSignedUrl(storagePath, 3600 * 24 * 30); // 30 jours

      console.log(`üîó URL publique: ${publicUrlData.publicUrl}`);
      if (signedUrlData?.signedUrl) {
        console.log(`üîê URL sign√©e g√©n√©r√©e`);
      }

      // Ins√©rer dans la base de donn√©es
      console.log(`üíæ Insertion en base de donn√©es...`);
      const { data: contentData, error: contentError } = await supabase
        .from('contents')
        .insert({
          title: demoFile.metadata.title,
          description: demoFile.metadata.description,
          type: demoFile.metadata.type,
          author: demoFile.metadata.author,
          duration: demoFile.metadata.duration,
          category: demoFile.metadata.category,
          thumbnail: null,
          views: Math.floor(Math.random() * 5000) + 500, // Vues entre 500 et 5500
        })
        .select('id')
        .single();

      if (contentError) {
        console.error(`‚ùå Erreur insertion ${demoFile.name}:`, contentError);
        continue;
      }

      console.log(`‚úÖ Contenu cr√©√© avec l'ID: ${contentData.id}`);

      // Nettoyer le fichier temporaire
      fs.unlinkSync(filePath);
    }

    // Nettoyer le dossier temporaire
    fs.rmSync(tempDir, { recursive: true, force: true });

    console.log('\nüéâ Ajout des donn√©es de d√©mo termin√© !');
    console.log('\nüìä R√©sum√©:');
    console.log(`  ‚úÖ ${demoFiles.length} fichiers de d√©mo trait√©s`);
    console.log('  ‚úÖ Types: MP3, MP4, PDF');
    console.log('  ‚úÖ Cat√©gories: Bien-√™tre, Leadership, Productivit√©, Innovation, Ventes, Communication');
    console.log('  ‚úÖ Fichiers stock√©s dans le bucket Supabase');
    console.log('  ‚úÖ URLs publiques et sign√©es g√©n√©r√©es');
    console.log('\nüí° Les contenus de d√©mo sont maintenant disponibles avec de vrais fichiers !');

    // Afficher un r√©sum√© des contenus cr√©√©s
    console.log('\nüìã Contenus cr√©√©s:');
    demoFiles.forEach((file, index) => {
      console.log(`  ${index + 1}. ${file.metadata.title} (${file.metadata.type})`);
      console.log(`     Auteur: ${file.metadata.author}`);
      console.log(`     Cat√©gorie: ${file.metadata.category}`);
      console.log(`     Dur√©e: ${file.metadata.duration > 0 ? Math.floor(file.metadata.duration / 60) + ' min' : 'Document'}`);
      console.log('');
    });

  } catch (error) {
    console.error('‚ùå Erreur lors de l\'ajout des donn√©es de d√©mo:', error);
  }
}

// Ex√©cuter le script
addRealDemoData(); 